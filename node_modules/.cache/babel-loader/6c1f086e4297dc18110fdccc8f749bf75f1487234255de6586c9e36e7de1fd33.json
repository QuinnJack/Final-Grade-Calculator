{"ast":null,"code":"import React,{useState}from\"react\";import\"./App.css\";import{Button}from\"./components/Button\";import{Equal,X}from\"lucide-react\";import{Input}from\"./components/Input\";import{Label}from\"./components/Label\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Component(){// State management for grades, weights, target, average, and needed grade\nconst[grades,setGrades]=useState(Array(5).fill(\"\"));const[weights,setWeights]=useState(Array(5).fill(\"\"));const[target,setTarget]=useState(\"\");const[average,setAverage]=useState(\"\");const[needed,setNeeded]=useState(\"\");// Handle input change for grades and weights\nconst handleGradeChange=(index,value)=>{const newGrades=[...grades];newGrades[index]=value;setGrades(newGrades);};const handleWeightChange=(index,value)=>{const newWeights=[...weights];newWeights[index]=value;setWeights(newWeights);};// Calculate average and needed grade\nconst calculateGrades=()=>{let totalWeightedGrade=0;let totalWeight=0;for(let i=0;i<grades.length;i++){const grade=parseFloat(grades[i]);const weight=parseFloat(weights[i]);if(!isNaN(grade)&&!isNaN(weight)){totalWeightedGrade+=grade*(weight/100);totalWeight+=weight;}}if(totalWeight===0){setAverage(\"\");setNeeded(\"\");return;}const avg=totalWeightedGrade/(totalWeight/100);setAverage(avg.toFixed(2));if(target.trim()===\"\"){setNeeded(\"\");return;}const targetValue=parseFloat(target);const remainingWeight=100-totalWeight;let neededGrade;if(remainingWeight<=0){neededGrade=\"∞\";// infinity symbol\n}else{neededGrade=(targetValue-avg*(totalWeight/100))/(remainingWeight/100);neededGrade=neededGrade.toFixed(2);}setNeeded(neededGrade);};// Reset the form\nconst resetForm=()=>{setGrades(Array(5).fill(\"\"));setWeights(Array(5).fill(\"\"));setTarget(\"\");setAverage(\"\");setNeeded(\"\");};return/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center h-screen\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-950 rounded-lg shadow-lg p-8 w-full max-w-md\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold mb-2\",children:\"Grade Calculator\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"grid grid-cols-2 gap-4\",children:[grades.map((_,index)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"grade-\".concat(index+1),children:\"Grade %\"}),/*#__PURE__*/_jsx(Input,{id:\"grade-\".concat(index+1),max:\"100\",min:\"0\",type:\"number\",value:grades[index],onChange:e=>handleGradeChange(index,e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"weight-\".concat(index+1),children:\"Weight %\"}),/*#__PURE__*/_jsx(Input,{id:\"weight-\".concat(index+1),max:\"100\",min:\"0\",type:\"number\",value:weights[index],onChange:e=>handleWeightChange(index,e.target.value)})]})]},index)),/*#__PURE__*/_jsxs(\"div\",{className:\"col-span-2 space-y-2\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"target\",children:\"Target Grade %\"}),/*#__PURE__*/_jsx(Input,{id:\"target\",max:\"100\",min:\"0\",type:\"number\",value:target,onChange:e=>setTarget(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-span-1 flex items-end mt-4 space-x-4\",children:[/*#__PURE__*/_jsx(Button,{className:\"mt-100 button-shrink\",type:\"button\",size:\"lg\",StartIcon:Equal,onClick:calculateGrades,children:\"Calculate\"}),/*#__PURE__*/_jsx(Button,{className:\"mt-100 button-shrink\",type:\"button\",size:\"lg\",StartIcon:X,onClick:resetForm,children:\"Reset\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-span-2 space-y-3\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"average\",children:\"Average Grade\"}),/*#__PURE__*/_jsx(Input,{id:\"average\",max:\"100\",min:\"0\",readOnly:true,className:\"appearance-none\",value:average})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-span-2 space-y-3\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"needed\",children:\"Grade Needed\"}),/*#__PURE__*/_jsx(Input,{id:\"needed\",max:\"100\",min:\"0\",readOnly:true,className:\"appearance-none\",value:needed})]})]})]})});}","map":{"version":3,"names":["React","useState","Button","Equal","X","Input","Label","jsx","_jsx","jsxs","_jsxs","Component","grades","setGrades","Array","fill","weights","setWeights","target","setTarget","average","setAverage","needed","setNeeded","handleGradeChange","index","value","newGrades","handleWeightChange","newWeights","calculateGrades","totalWeightedGrade","totalWeight","i","length","grade","parseFloat","weight","isNaN","avg","toFixed","trim","targetValue","remainingWeight","neededGrade","resetForm","className","children","map","_","Fragment","htmlFor","concat","id","max","min","type","onChange","e","size","StartIcon","onClick","readOnly"],"sources":["/Users/quinn/School/before/Summer/Projects/grade/grade-calcuator/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Button } from \"./components/Button\";\nimport { Equal, X, Infinity } from \"lucide-react\";\nimport { Input } from \"./components/Input\";\nimport { Label } from \"./components/Label\";\n\nexport default function Component() {\n  // State management for grades, weights, target, average, and needed grade\n  const [grades, setGrades] = useState<string[]>(Array(5).fill(\"\"));\n  const [weights, setWeights] = useState<string[]>(Array(5).fill(\"\"));\n  const [target, setTarget] = useState<string>(\"\");\n  const [average, setAverage] = useState<string>(\"\");\n  const [needed, setNeeded] = useState<string>(\"\");\n\n  // Handle input change for grades and weights\n  const handleGradeChange = (index: number, value: string) => {\n    const newGrades = [...grades];\n    newGrades[index] = value;\n    setGrades(newGrades);\n  };\n\n  const handleWeightChange = (index: number, value: string) => {\n    const newWeights = [...weights];\n    newWeights[index] = value;\n    setWeights(newWeights);\n  };\n\n  // Calculate average and needed grade\n  const calculateGrades = () => {\n    let totalWeightedGrade = 0;\n    let totalWeight = 0;\n  \n    for (let i = 0; i < grades.length; i++) {\n      const grade = parseFloat(grades[i]);\n      const weight = parseFloat(weights[i]);\n      if (!isNaN(grade) && !isNaN(weight)) {\n        totalWeightedGrade += grade * (weight / 100);\n        totalWeight += weight;\n      }\n    }\n  \n    if (totalWeight === 0) {\n      setAverage(\"\");\n      setNeeded(\"\");\n      return;\n    }\n  \n    const avg = totalWeightedGrade / (totalWeight / 100);\n    setAverage(avg.toFixed(2));\n  \n    if (target.trim() === \"\") {\n      setNeeded(\"\");\n      return;\n    }\n  \n    const targetValue = parseFloat(target);\n    const remainingWeight = 100 - totalWeight;\n    let neededGrade;\n  \n    if (remainingWeight <= 0) {\n      neededGrade = \"∞\"; // infinity symbol\n    } else {\n      neededGrade = ((targetValue - avg * (totalWeight / 100)) / (remainingWeight / 100));\n      neededGrade = neededGrade.toFixed(2);\n    }\n  \n    setNeeded(neededGrade);\n  };\n  \n\n  // Reset the form\n  const resetForm = () => {\n    setGrades(Array(5).fill(\"\"));\n    setWeights(Array(5).fill(\"\"));\n    setTarget(\"\");\n    setAverage(\"\");\n    setNeeded(\"\");\n  };\n\n  return (\n    <div className=\"flex justify-center items-center h-screen\">\n      <div className=\"bg-white dark:bg-gray-950 rounded-lg shadow-lg p-8 w-full max-w-md\">\n        <h1 className=\"text-2xl font-bold mb-2\">Grade Calculator</h1>\n        <form className=\"grid grid-cols-2 gap-4\">\n          {grades.map((_, index) => (\n            <React.Fragment key={index}>\n              <div className=\"space-y-2\">\n                <Label htmlFor={`grade-${index + 1}`}>Grade %</Label>\n                <Input\n                  id={`grade-${index + 1}`}\n                  max=\"100\"\n                  min=\"0\"\n                  type=\"number\"\n                  value={grades[index]}\n                  onChange={(e) => handleGradeChange(index, e.target.value)}\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor={`weight-${index + 1}`}>Weight %</Label>\n                <Input\n                  id={`weight-${index + 1}`}\n                  max=\"100\"\n                  min=\"0\"\n                  type=\"number\"\n                  value={weights[index]}\n                  onChange={(e) => handleWeightChange(index, e.target.value)}\n                />\n              </div>\n            </React.Fragment>\n          ))}\n          <div className=\"col-span-2 space-y-2\">\n            <Label htmlFor=\"target\">Target Grade %</Label>\n            <Input\n              id=\"target\"\n              max=\"100\"\n              min=\"0\"\n              type=\"number\"\n              value={target}\n              onChange={(e) => setTarget(e.target.value)}\n            />\n          </div>\n          <div className=\"col-span-1 flex items-end mt-4 space-x-4\">\n          <Button className=\"mt-100 button-shrink\" type=\"button\" size=\"lg\" StartIcon={Equal} onClick={calculateGrades}>\n  Calculate\n</Button>\n<Button className=\"mt-100 button-shrink\" type=\"button\" size=\"lg\" StartIcon={X} onClick={resetForm}>\n  Reset\n</Button>\n          </div>\n          <div className=\"col-span-2 space-y-3\">\n            <Label htmlFor=\"average\">Average Grade</Label>\n            <Input\n              id=\"average\"\n              max=\"100\"\n              min=\"0\"\n              readOnly\n              className=\"appearance-none\"\n              value={average}\n            />\n          </div>\n          <div className=\"col-span-2 space-y-3\">\n            <Label htmlFor=\"needed\">Grade Needed</Label>\n            <Input\n              id=\"needed\"\n              max=\"100\"\n              min=\"0\"\n              readOnly\n              className=\"appearance-none\"\n              value={needed}\n            />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}